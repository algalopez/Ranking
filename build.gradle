plugins {
    id 'java'
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id "org.sonarqube" version "2.8"
    id 'jacoco'
}

group 'com.algalopez.tunturi'
version project_version

sourceCompatibility = 11

repositories {
    mavenCentral()
}

wrapper {
    gradleVersion = '5.6.3'
}

dependencies {

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: spring_boot_version
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: spring_boot_version
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: spring_boot_version
    implementation group: 'org.springframework.security.oauth.boot', name: 'spring-security-oauth2-autoconfigure', version: spring_boot_version
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: mariadb_version
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: swagger_version
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: swagger_version
    compileOnly group: 'org.projectlombok', name: 'lombok', version: lombok_version
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombok_version

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: spring_boot_version
    testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: spring_security_version
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: lombok_version
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombok_version
}

sonarqube {
    properties {
        property 'sonar.projectKey', 'Tunturi'
        property 'sonar.projectName', 'Tunturi'
        property 'sonar.projectVersion', version
        property 'sonar.language', 'java'
        property 'sonar.sources', 'src/main/java'
        property 'sonar.tests', 'src/test/java'
        property 'sonar.sourceEncoding', 'UTF-8'
        property 'sonar.exclusions', '**/TunturiApplication.java, **/*Config.java, **/*Constants.java'
        property 'sonar.coverage.exclusions', '**/TunturiApplication.java, **/*Config.java, **/*Constants.java'
    }
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
    }
}

task createDatabase(type: Exec) {
    group = 'Tunturi'
    workingDir "${rootDir}/database"
    commandLine 'sh', './PrepareDatabase.sh'
}

task populateDatabase(type: Exec) {
    group = 'Tunturi'
    workingDir "${rootDir}/database"
    commandLine 'sh', './PopulateDatabase.sh'
}

task copyArtifacts(type: Copy) {
    group 'Tunturi'
    from 'build/libs/'
    include 'Tunturi-*.jar'
    into "artifact/"
}

task zipArtifacts(type: Zip, dependsOn: ['copyArtifacts']) {
    group 'Tunturi'

    from "artifact/"
    exclude '*.zip'
    exclude '.gitkeep'
    destinationDirectory = file('artifact')
}
