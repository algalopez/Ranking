// Utils

void waitForDatabase() {
    exec {
        commandLine 'bash', "${projectDir}/docker/script/WaitForDatabase.sh", "url=127.0.0.1", "port=10400", "user=user", "pass=pass"
    }
}

// Common docker commands
task showDockerContainers(type: Exec) {
    group 'tunturi-docker-info'
    executable "docker"
    args('ps', '-a')
}

task showDockerImages(type: Exec) {
    group 'tunturi-docker-info'
    executable "docker"
    args('images')
}

// Database Docker commands
task buildDatabaseDocker(type: Exec) {
    group 'tunturi-docker'
    executable "docker"
    args('build', '-f', "${projectDir}/docker/db/Dockerfile", '-t', 'tunturi-db', "${projectDir}/")
}

task runDatabaseDocker(type: Exec) {
    group 'tunturi-docker'
    executable "docker"
    args('run', '--name', 'tunturi-db', '-d', '-p', '10400:3306',
            '-e', 'MARIADB_ROOT_PASSWORD=pass',
            '-e', 'MARIADB_DATABASE=tunturi',
            '-e', 'MARIADB_USER=user',
            '-e', 'MARIADB_PASSWORD=pass',
            '-e', 'MARIADB_INITDB_SKIP_TZINFO=1',
            'tunturi-db')
    doLast {
        waitForDatabase()
    }
}

task stopDatabaseDocker(type: Exec) {
    group 'tunturi-docker'
    executable "docker"
    args('stop', 'tunturi-db')
}

task stopAndRemoveDatabaseDocker(type: Exec) {
    group 'tunturi-docker'
    executable "docker"
    args('rm', '-f', 'tunturi-db')
}

// App Docker commands
task buildAppDocker(type: Exec) {
    group 'tunturi-docker'
    executable "docker"
    args('build', '-f', "${projectDir}/docker/app/Dockerfile", '-t', 'tunturi-app', "--build-arg", "APP_VERSION=$project_version", "${projectDir}/")
}

task runAppDocker(type: Exec) {
    group 'tunturi-docker'
    executable "docker"
    args('run', '--env-file', "${projectDir}/docker/app/application.env", '-p', '10300:10300', '--name', 'tunturi-app', '-d', 'tunturi-app')
}

task stopAppDocker(type: Exec) {
    group 'tunturi-docker'
    executable "docker"
    args('stop', 'tunturi-app')
}

task stopAndRemoveAppDocker(type: Exec) {
    group 'tunturi-docker'
    executable "docker"
    args('rm', '-f', 'tunturi-app')
}

// Docker publish commands
task loginToRegistry(type: Exec) {
    group 'tunturi-docker-publish'
    executable "docker"
    args('login', '--username', 'algalopez', '-p', System.getenv('DOCKERHUB_REGISTRY_TOKEN'))
}

task logoutFromRegistry(type: Exec) {
    group 'tunturi-docker-publish'
    executable "docker"
    args('logout')
}

task createDatabaseTag(type: Exec) {
    group 'tunturi-docker-publish'
    executable "docker"
    args('tag', 'tunturi-db', "algalopez/tunturi-db:${project_version}")
}

task createAppTag(type: Exec) {
    group 'tunturi-docker-publish'
    executable "docker"
    args('tag', 'tunturi-app', "algalopez/tunturi-app:${project_version}")
}

task publishDatabaseImage(type: Exec) {
    group 'tunturi-docker-publish'
    executable "docker"
    args('push', "algalopez/tunturi-db:${project_version}")
}

task publishAppImage(type: Exec) {
    group 'tunturi-docker-publish'
    executable "docker"
    args('push', "algalopez/tunturi-app:${project_version}")
}
